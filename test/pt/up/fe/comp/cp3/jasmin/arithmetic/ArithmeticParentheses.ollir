ArithmeticParentheses {
    .construct ArithmeticParentheses().V {
        invokespecial(this, "<init>").V;
    }

    .method public static main(args.array.String).V {
        obj.ArithmeticParentheses :=.ArithmeticParentheses new(ArithmeticParentheses).ArithmeticParentheses;
        invokespecial(obj.ArithmeticParentheses, "<init>").V;
        result.i32 :=.i32 invokevirtual(obj.ArithmeticParentheses, "test").i32;
        invokestatic(io, "println", result.i32).V;
        ret.V;
    }

    .method public test().i32 {
        temp1.i32 :=.i32 2.i32 +.i32 3.i32;
        result.i32 :=.i32 temp1.i32 *.i32 4.i32;
        ret.i32 result.i32;
    }
}